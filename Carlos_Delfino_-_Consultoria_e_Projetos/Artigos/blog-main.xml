<?xml version="1.0"?>
<rss xmlns:iweb="http://www.apple.com/iweb" version="2.0">
  <channel>
    <title>Artigos</title>
    <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos</link>
    <description>SEmanalmente escrevo pequenas dicas e artigos para ajudar a compreender conceitos envoltos nas tecnologias que trabalho, contribuir para eliminar d&#xFA;vidas.

Caso tenha alguma d&#xFA;vida me envie por e-mail, lembre-se de descrever seu projeto.</description>
    <item>
      <title>Configurando o Asterisk para os primeiros passos</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Configurando_o_Asterisk_para_os_primeiros_passos.html</link>
      <guid isPermaLink="false">e4edb895-3726-4c02-8097-a1ad30773dfc</guid>
      <pubDate>Tue, 24 Jun 2014 22:23:38 -0300</pubDate>
      <description>Acreditamos que voc&#xEA; ja tenha tido sucesso em instalar o Asterisk conforme o tutorial &#x201C;&lt;br/&gt;&lt;a href="http://carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Instalacao_do_Asterisk_para_uso_com_Arduino.html"&gt;Instala&#xE7;&#xE3;o do Asterisk para Uso com Arduino&#x201D;&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;O primeiro passo a ser dado com o Asterisk ser&#xE1; configurar as extens&#xF5;es e canais de comunica&#xE7;&#xE3;o, usaremos apenas um tipo de canal,  controlado pelos protocolos SIP, o que ser&#xE1; suficiente para tudo que desejamos apresentar e muito mais.&lt;br/&gt;&lt;br/&gt;Durante a instala&#xE7;&#xE3;o usamos o comando &#x201C;make samples&#x201D; para que tenhamos configura&#xE7;&#xF5;es padr&#xF5;es para uso do Asterisk, mas estas configura&#xE7;&#xF5;es n&#xE3;o nos atende, portanto vamos fazer um backup delas, criando um diret&#xF3;rio &#x201C;backup&#x201D; e movendo todos os arquivos que est&#xE3;o na pasta &#x201C;/etc/asterisk&#x201D; para a pasta de bakcup, por&#xE9;m mantenha uma copia dos seguintes arquivos:&lt;br/&gt;&lt;br/&gt;	&#x2022;	asterisk.conf&lt;br/&gt;	&#x2022;	indications.conf&lt;br/&gt;	&#x2022;	logger.conf&lt;br/&gt;	&#x2022;	cel.conf&lt;br/&gt;	&#x2022;	features.conf&lt;br/&gt;&lt;br/&gt;Deixe todos os arquivos intactos, por&#xE9;m sugiro que liste o conte&#xFA;do de cada um para se familiarizar mais com as configura&#xE7;&#xF5;es, o arquivo asterisk.conf e logger.conf podem ter configura&#xE7;&#xF5;es de depura&#xE7;&#xE3;o alteradas para melhorar a visualiza&#xE7;&#xE3;o de mensagens de erros.&lt;br/&gt;&lt;br/&gt;Antes de Come&#xE7;ar, Alguns Conceitos&lt;br/&gt;&lt;br/&gt;Para se usar o Asterisk &#xE9; preciso consolidar alguns conceitos, dentre eles:&lt;br/&gt;&lt;br/&gt;	&#x2022;	Canais de Audio&lt;br/&gt;	&#x2022;	Ramais&lt;br/&gt;	&#x2022;	Planos de Discagem&lt;br/&gt;	&#x2022;	M&#xF3;dulos/Extens&#xF5;es&lt;br/&gt;&lt;br/&gt;Considerando que voc&#xEA; j&#xE1; conhece tais conceitos vamos continuar.&lt;br/&gt;&lt;br/&gt;Quais M&#xF3;dulos iremos Usar&lt;br/&gt;&lt;br/&gt;O primeiro arquivo que vamos intervir &#xE9; o arquivo &#x201C;modules.conf&#x201D;, este arquivo informa ao Asterisk como carregar os m&#xF3;dulos necess&#xE1;rio ao nosso ambiente. O Asterisk &#xE9; um software totalmente modular e al&#xE9;m de vir com todos os m&#xF3;dulos/extens&#xF5;es necess&#xE1;rios para nosso trabalho, possui uma API bem madura para se desenvolver novos m&#xF3;dulos.&lt;br/&gt;&lt;br/&gt;Neste arquivo originalmente ele pede para que o Asterisk fa&#xE7;a a carga autom&#xE1;tica dos m&#xF3;dulos, por&#xE9;m queremos carregar apenas m&#xF3;dulos que nos s&#xE3;o interessantes, j&#xE1; que com a carga autom&#xE1;tica &#xE9; carregado uma grande quantidade de m&#xF3;dulos desnecess&#xE1;rios. &lt;br/&gt;&lt;br/&gt;Portanto vamos criar um arquivo novo com apenas os m&#xF3;dulos que iremos precisar em nosso Workshop.&lt;br/&gt;&lt;br/&gt;Vamos come&#xE7;&#xE1;r criando o arquivo de novo &#x201C;modules.conf&#x201D; e na primeira linha coloque a diretiva que indica inicio de sec&#xE3;o &#x201C;[modules]&#x201D;, em seguida na pr&#xF3;xima linha coloque o parametro &#x201C;autoload&#x201D;, com a op&#xE7;&#xE3;o &#x201C;no&#x201D;, veja abaixo o exemplo de com ficar&#xE1; o arquivo, neste exemplo j&#xE1; listo todos os m&#xF3;dulos necess&#xE1;rios e como devem ser carregados:&lt;br/&gt;&lt;br/&gt;Agora abaixo da diretiva autoload, coloque as diretivas conforme o exemplo a seguir, explicarei depois do exemplo os grupos de diretivas:&lt;br/&gt;&lt;br/&gt;[modules]&lt;br/&gt;autoload=no&lt;br/&gt;;&lt;br/&gt;; Modulo de Configura&#xE7;&#xE3;o por Arquivo&lt;br/&gt;preload=pbx_config.so&lt;br/&gt;;&lt;br/&gt;; M&#xF3;dulos de Aplica&#xE7;&#xE3;o com fun&#xE7;&#xF5;es para planos de discagem&lt;br/&gt;load=app_system.so&lt;br/&gt;load=app_dial.so&lt;br/&gt;load=app_record.so&lt;br/&gt;load=app_userevent.so&lt;br/&gt;load=app_playtones.so&lt;br/&gt;load=app_playback.so&lt;br/&gt;;&lt;br/&gt;; Fun&#xE7;&#xF5;es para Planos de Discagem&lt;br/&gt;load=func_dialgroup.so&lt;br/&gt;load=func_dialplan.so&lt;br/&gt;;&lt;br/&gt;; Recursos&lt;br/&gt;load=res_rtp_asterisk.so&lt;br/&gt;; Recurso que ira fazer a integrac&#xE3;o com scripts que se comunicam com Arduino&lt;br/&gt;load=res_agi.so&lt;br/&gt;;&lt;br/&gt;; Codecs de Audio&lt;br/&gt;load=codec_alaw.so&lt;br/&gt;load=codec_ulaw.so&lt;br/&gt;load=codec_gsm.so&lt;br/&gt;load=codec_ilbc.so&lt;br/&gt;;&lt;br/&gt;; Canais de Audio Local&lt;br/&gt;noload=chan_alsa.so&lt;br/&gt;noload=chan_oss.so&lt;br/&gt;noload=chan_console.so&lt;br/&gt;; Canais de Audio VOIP, usaremos apenas SIP para os ramais&lt;br/&gt;load=chan_sip.so&lt;br/&gt;;&lt;br/&gt;; Formatos de audio, observe diretiva &#x201C;noload&#x201D;, diz para n&#xE3;o carregar&lt;br/&gt;noload=format_g719.so&lt;br/&gt;load=format_ilbc.so&lt;br/&gt;noload=format_sln16.so&lt;br/&gt;load=format_g723.so&lt;br/&gt;load=format_jpeg.so&lt;br/&gt;noload=format_sln.so&lt;br/&gt;noload=format_g726.so&lt;br/&gt;load=format_mp3.so&lt;br/&gt;load=format_vox.so&lt;br/&gt;load=format_g729.so&lt;br/&gt;load=format_ogg_vorbis.so&lt;br/&gt;load=format_wav_gsm.so&lt;br/&gt;load=format_gsm.so&lt;br/&gt;load=format_pcm.so&lt;br/&gt;load=format_wav.so&lt;br/&gt;noload=format_h263.so&lt;br/&gt;noload=format_siren14.so&lt;br/&gt;noload=format_h264.so&lt;br/&gt;noload=format_siren7.so&lt;br/&gt;&lt;br/&gt;Como pode ser visto nos coment&#xE1;rios, carregamos primeiro um modulo que ir&#xE1; cuidar da configura&#xE7;&#xE3;o, este modulo nos oferece recurso como recargar de configura&#xE7;&#xE3;o, e principalmente a possibilidade de se usar arquivos de configura&#xE7;&#xE3;o em formato texto.&lt;br/&gt;&lt;br/&gt;O m&#xF3;dulo de configura&#xE7;&#xE3;o e carregado com a diretiva &#x201C;preload&#x201D; para que seja carregado com anteced&#xEA;ncia.&lt;br/&gt;&lt;br/&gt;Em seguida, carregamos m&#xF3;dulos de aplica&#xE7;&#xE3;o e &#xFA;teis ao plano de discagem, por&#xE9;m o que mais nos interessa e que iremos lidar mais, al&#xE9;m do plano de discagem propriamente dito, ser&#xE1; o m&#xF3;dulo &#x201C;res_agi.so&#x201D;, este m&#xF3;dulo &#xE9; respons&#xE1;vel pela integra&#xE7;&#xE3;o com aplica&#xE7;&#xF5;es externas, funcionando como um Gateway para o Asterisk e tais aplica&#xE7;&#xF5;es, ser&#xE1; atrav&#xE9;s deste recurso que iremos ver como desenvolver scripts para se comunicar com o Arduino.&lt;br/&gt;&lt;br/&gt;Os m&#xF3;dulos de prefixo &#x201C;chan_&#x201D;, criam os canais de audio e voip necess&#xE1;rio ao funcionamento do Asterisk e todo o PBX e os m&#xF3;dulos de prefixo &#x201C;format_&#x201D; carregam recursos para tratamentos dos arquivos de &#xE1;udio nos formatos identificados, ser&#xE3;o &#xFA;teis para gravar e reproduzir arquivos de &#xE1;udio.&lt;br/&gt;&lt;br/&gt;Ap&#xF3;s esta mudan&#xE7;a precisamos reiniciar o Asterisk j&#xE1; que fizemos muda&#xE7;as em praticamente todos os arquivos de configura&#xE7;&#xE3;o, reiniciando &#xE9; mais seguro se ter o resultado desejado.&lt;br/&gt;&lt;br/&gt;Por&#xE9;m, ao se alterar apenas arquivos de configura&#xE7;&#xF5;es pode se usar o comando &#x201C;rasterisk&#x201D; que veremos a seguir.&lt;br/&gt;&lt;br/&gt;Pr&#xF3;ximos Passos&lt;br/&gt;&lt;br/&gt;Veremos no pr&#xF3;ximo tutorial como criar nosso primeiro canal de comunica&#xE7;&#xE3;o e nossos ramais. Aguardem.</description>
      <iweb:image href="Media/object009.png"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Configurando_o_Asterisk_para_os_primeiros_passos.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>Instala&#xE7;&#xE3;o do Asterisk para uso com Arduino</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Instalacao_do_Asterisk_para_uso_com_Arduino.html</link>
      <guid isPermaLink="false">278b05a4-31b8-44f7-a877-03a976422694</guid>
      <pubDate>Tue, 24 Jun 2014 19:49:57 -0300</pubDate>
      <description>Antes de come&#xE7;armos &#xE9; importante lembrar que Asterisk foi desenvolvido para o SO Linux, por&#xE9;m h&#xE1; ports para outros SOs como FreeBSD, MACOSX e at&#xE9; para Windows, mas o mais interessante e o fato de haver ports para que possa ser usado com RaspberryPI e at&#xE9; para Beagle Bone.&lt;br/&gt;&lt;br/&gt;Para instalar o Asterisk &#xE9; preciso seguir alguns passos, dentre eles voc&#xEA; deve primeiro fazer o Download dos seguintes pacotes, para isso crie uma pasta por exemplo chamada &#x201C;/usr/src/asterisk&#x201D;, ou outro local que achar mais indicado em sua instala&#xE7;&#xE3;o Linux. (sim iremos nos basear no Linux, j&#xE1; que o Asterisk roda bem melhor nesta SO), observe neste tutorial estarei usando o Ubuntu em sua &#xFA;ltima vers&#xE3;o.&lt;br/&gt;&lt;br/&gt;Use os seguintes comandos para baixar os pacotes:&lt;br/&gt;&lt;br/&gt;wget &lt;a href="http://downloads/asterisk.org/pub/telephony/asterisk/asterisk-1.8.current.tar.gz"&gt;http://downloads/asterisk.org/pub/telephony/asterisk/asterisk-1.8.current.tar.gz&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;wget &lt;a href="http://downloads/asterisk.org/pub/telephony/libpri/libpri-1.4.current.tar.gz"&gt;http://downloads/asterisk.org/pub/telephony/libpri/libpri-1.4.current.tar.gz&lt;/a&gt;&lt;br/&gt;wget &lt;a href="http://downloads/asterisk.org/pub/telephony/libss7/libss7-1.0.2.tar.gz"&gt;http://downloads/asterisk.org/pub/telephony/libss7/libss7-1.0.2.tar.gz&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;wget &lt;a href="http://downloads/asterisk.org/pub/telephony/dahdi-linux/dahdi-tools/dahdi-tools-current.tar.gz"&gt;http://downloads/asterisk.org/pub/telephony/dahdi-linux/dahdi-tools/dahdi-tools-current.tar.gz&lt;/a&gt;&lt;br/&gt;wget &lt;a href="http://downloads/asterisk.org/pub/telephony/dahdi-linux/dahdi-linux/dahdi-linux-current.tar.gz"&gt;http://downloads/asterisk.org/pub/telephony/dahdi-linux/dahdi-linux/dahdi-linux-current.tar.gz&lt;/a&gt;&lt;br/&gt;wget &lt;a href="http://openr2.googlecode.com/files/openr2-1.3.1.tar.gz"&gt;http://openr2.googlecode.com/files/openr2-1.3.3.tar.gz&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;Agora que baixou os pacotes descompacte cada um e certifique-se que as pastas foram criadas conforme o nome de cada arquivo.&lt;br/&gt;&lt;br/&gt;Compilando os pacotes e instalando&lt;br/&gt;&lt;br/&gt;Vamos come&#xE7;ar a instala&#xE7;&#xE3;o pelo pacote dahdi-linux-current.tar.gz, portanto entre no diretorio que foi criado ao descompactar este pacote e digite os seguintes comandos em cada linha:&lt;br/&gt;&lt;br/&gt;make clean&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;O pr&#xF3;ximo pacote deve ser o dahdi-tools-current.tar.gz, siga o mesmo procedimento mudando para o diret&#xF3;rio criado com a descompacta&#xE7;&#xE3;o e em seguida digite os comandos no diret&#xF3;rio&lt;br/&gt;&lt;br/&gt;make clean&lt;br/&gt;./configure&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;Continuarmos o mesmo procedimento agora no pacote libpri-1.4.current.tar.gz, digitando os seguintes comandos em cada linha:&lt;br/&gt;&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;Agora compilamos o pacote openr2-1.3.1-tar.gz, descompacte como os anteriores entre no diret&#xF3;rio criado e digite os comandos em cada linha, este pacote n&#xE3;o ser&#xE1; necess&#xE1;rio em nosso workshop, j&#xE1; que seu uso &#xE9; para quem pretende ter linha E1 em seu ambiente:&lt;br/&gt;&lt;br/&gt;./configure --prefix=/usr&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;O pacote libss7-1.0.2.tar.gz para terminar os prequistos manuais, seguindo tamb&#xE9;m os mesmo procedimentos:&lt;br/&gt;&lt;br/&gt;make clean&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;E finalmente o pr&#xF3;prio Asterisk que n&#xE3;o tem segredos na instala&#xE7;&#xE3;o sendo necess&#xE1;rio os seguintes comandos, obseve que ao digitar o comando &#x201C;make menuselect&#x201D; voc&#xEA; pode sair dele sem mudar nenhuma sele&#xE7;&#xE3;o, por&#xE9;m se quiser arriscar (experimentando) ou sabe exatamente o que faz, pode mudar as sele&#xE7;&#xF5;es para atender suas necessidades:&lt;br/&gt;&lt;br/&gt;contrib/scripts/get_ilbc_source.sh&lt;br/&gt;contrib/scripts/get_mp3_source.sh&lt;br/&gt;contrib/scripts/install_prereq&lt;br/&gt;make menuselect&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;make samples&lt;br/&gt;make config&lt;br/&gt;&lt;br/&gt;Pronto em tese o Asterisk est&#xE1; pronto e instalado para iniciar nosso workshop.&lt;br/&gt;&lt;br/&gt;Em breve mais atualiza&#xE7;&#xF5;es neste tutorial e mais links para outros tutoriais que usaremos no Workshop.&lt;br/&gt;&lt;br/&gt;Outras informa&#xE7;&#xF5;es sobre o Workshop podem ser obtidos no link: &lt;a href="https://www.facebook.com/events/1500419536839268/?ref=ts&amp;fref=ts"&gt;https://www.facebook.com/events/1500419536839268/&lt;/a&gt;</description>
      <iweb:image href="Media/object000.png"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Instalacao_do_Asterisk_para_uso_com_Arduino.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>433Mhz - porque usar?</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/5/9_433Mhz_-_porque_usar.html</link>
      <guid isPermaLink="false">e8d12edf-9c84-405d-af3e-27bf85e13c2d</guid>
      <pubDate>Fri, 9 May 2014 12:06:10 -0300</pubDate>
      <iweb:image href="Media/object019.png"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/5/9_433Mhz_-_porque_usar.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>Barramento OneWire - 1-wire</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/29_Barramento_OneWire_-_1-wire.html</link>
      <guid isPermaLink="false">9eef616c-054a-4d06-b7ac-abf9d83ee26c</guid>
      <pubDate>Tue, 29 Apr 2014 00:16:18 -0300</pubDate>
      <description>Muitas vezes usamos alguns sensores que utilizam um &#xFA;nico barramento para se comunicar com o Arduino, alguns precisam de alimenta&#xE7;&#xE3;o como &#xE9; o caso do DHT-11/22, outros n&#xE3;o, como o sensor de temperatura DS18B20. Por&#xE9;m, o DHT-11/22 usa um barramento chamado Single-Wire Two Way, que &#xE9; diferente do Barramento OneWire que tamb&#xE9;m se escrito 1-Wire, desenvolvido pela Dallas Semiconductor Inc. atual Maxim.&lt;br/&gt;&lt;br/&gt;O Grande diferencial do 1-Wire al&#xE9;m de ser bidirecional, &#xE9; o fato de usar o barramento de comunica&#xE7;&#xE3;o como fonte de alimenta&#xE7;&#xE3;o, portanto os dispositivos s&#xE3;o constru&#xED;dos para obter energia do pr&#xF3;prio barramento de dados, o que chamamos de alimenta&#xE7;&#xE3;o parasita. Um barramento 1-Wire, aceita m&#xFA;ltiplos Slaves n&#xE3;o importa a fam&#xED;lia, podendo comunicar a uma taxa de 15,3Kbs, havendo alguns que se comunicam em velocidade superiores. Devido a baixa velocidade e o baixo consumo &#xE9; poss&#xED;vel usar barramentos com amplo comprimento, como 10M. O Barramento 1-Wire &#xE9; tamb&#xE9;m conhecido como MicroLan. H&#xE1; possibilidade de simular 1-Wire na porta serial ou Paralela de um PC.&lt;br/&gt;&lt;br/&gt;H&#xE1; dispositivos 1-Wire encapsulados como transistores (T-92), e como bot&#xF5;es similares a bateria de rel&#xF3;gio conhecidos como iButton. Entre os principais dispositivos temos Sensores de Temperatures,  Identificadores e Mem&#xF3;ria EEPROM. Todos tendo uma identifica&#xE7;&#xE3;o &#xFA;nica 8 bytes de f&#xE1;brica.</description>
      <iweb:image href="Media/object019_1.png"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/29_Barramento_OneWire_-_1-wire.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>Canais Arena Mundial</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/23_Canais_Arena_Mundial.html</link>
      <guid isPermaLink="false">f264594f-48bc-40c1-bc24-3ff7e2acde24</guid>
      <pubDate>Wed, 23 Apr 2014 16:14:42 -0300</pubDate>
      <iweb:image href="Media/object000.jpg"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/23_Canais_Arena_Mundial.html#comment_layer"></iweb:comment>
    </item>
    <iweb:dateFormat>EEEE, d 'de' MMMM 'de' y</iweb:dateFormat>
    <iweb:baseURL>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos</iweb:baseURL>
    <iweb:maximumSummaryItems>5</iweb:maximumSummaryItems>
  </channel>
</rss>
