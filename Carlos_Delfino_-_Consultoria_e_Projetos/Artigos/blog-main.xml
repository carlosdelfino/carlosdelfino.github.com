<?xml version="1.0"?>
<rss xmlns:iweb="http://www.apple.com/iweb" version="2.0">
  <channel>
    <title>Artigos</title>
    <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos</link>
    <description>SEmanalmente escrevo pequenas dicas e artigos para ajudar a compreender conceitos envoltos nas tecnologias que trabalho, contribuir para eliminar d&#xFA;vidas.

Caso tenha alguma d&#xFA;vida me envie por e-mail, lembre-se de descrever seu projeto.</description>
    <item>
      <title>433Mhz - porque usar?</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/5/9_433Mhz_-_porque_usar.html</link>
      <guid isPermaLink="false">e8d12edf-9c84-405d-af3e-27bf85e13c2d</guid>
      <pubDate>Fri, 9 May 2014 12:06:10 -0300</pubDate>
      <iweb:image href="Media/object019.png"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/5/9_433Mhz_-_porque_usar.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>Barramento OneWire - 1-wire</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/29_Barramento_OneWire_-_1-wire.html</link>
      <guid isPermaLink="false">9eef616c-054a-4d06-b7ac-abf9d83ee26c</guid>
      <pubDate>Tue, 29 Apr 2014 00:16:18 -0300</pubDate>
      <description>Muitas vezes usamos alguns sensores que utilizam um &#xFA;nico barramento para se comunicar com o Arduino, alguns precisam de alimenta&#xE7;&#xE3;o como &#xE9; o caso do DHT-11/22, outros n&#xE3;o, como o sensor de temperatura DS18B20. Por&#xE9;m, o DHT-11/22 usa um barramento chamado Single-Wire Two Way, que &#xE9; diferente do Barramento OneWire que tamb&#xE9;m se escrito 1-Wire, desenvolvido pela Dallas Semiconductor Inc. atual Maxim.&lt;br/&gt;&lt;br/&gt;O Grande diferencial do 1-Wire al&#xE9;m de ser bidirecional, &#xE9; o fato de usar o barramento de comunica&#xE7;&#xE3;o como fonte de alimenta&#xE7;&#xE3;o, portanto os dispositivos s&#xE3;o constru&#xED;dos para obter energia do pr&#xF3;prio barramento de dados, o que chamamos de alimenta&#xE7;&#xE3;o parasita. Um barramento 1-Wire, aceita m&#xFA;ltiplos Slaves n&#xE3;o importa a fam&#xED;lia, podendo comunicar a uma taxa de 15,3Kbs, havendo alguns que se comunicam em velocidade superiores. Devido a baixa velocidade e o baixo consumo &#xE9; poss&#xED;vel usar barramentos com amplo comprimento, como 10M. O Barramento 1-Wire &#xE9; tamb&#xE9;m conhecido como MicroLan. H&#xE1; possibilidade de simular 1-Wire na porta serial ou Paralela de um PC.&lt;br/&gt;&lt;br/&gt;H&#xE1; dispositivos 1-Wire encapsulados como transistores (T-92), e como bot&#xF5;es similares a bateria de rel&#xF3;gio conhecidos como iButton. Entre os principais dispositivos temos Sensores de Temperatures,  Identificadores e Mem&#xF3;ria EEPROM. Todos tendo uma identifica&#xE7;&#xE3;o &#xFA;nica 8 bytes de f&#xE1;brica.</description>
      <iweb:image href="Media/object000.png"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/29_Barramento_OneWire_-_1-wire.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>Canais Arena Mundial</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/23_Canais_Arena_Mundial.html</link>
      <guid isPermaLink="false">f264594f-48bc-40c1-bc24-3ff7e2acde24</guid>
      <pubDate>Wed, 23 Apr 2014 16:14:42 -0300</pubDate>
      <iweb:image href="Media/object000.jpg"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/23_Canais_Arena_Mundial.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>Barramento e Portas de Tr&#xEA;s Estados</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/16_Barramento_e_Portas_de_Tres_Estados.html</link>
      <guid isPermaLink="false">d7fd9577-424c-4f8f-ac3c-16cbafb8ebbe</guid>
      <pubDate>Wed, 16 Apr 2014 16:41:20 -0300</pubDate>
      <description>Muitos protocolos em especial o I2C, utilizam uma &#xFA;nica linha do barramento para envio e recebimento de dados, o que leva a necessidade de monitorar o barramento para identificar se este est&#xE1; em uso por outro dispositivo que  participe na comunica&#xE7;&#xE3;o ou mesmo que apenas compartilhem o mesmo barramento. &lt;br/&gt;&lt;br/&gt;Para isso h&#xE1; o barramento de tr&#xEA;s estados. Quando um dispositivo ou porta que n&#xE3;o precisa monitorar nem transmitir dados, este entra em um estado que chamamos de estado Z (ou podemos chamar neutro), al&#xE9;m dele n&#xE3;o interferir no n&#xED;vel de sinal do barramento ele tamb&#xE9;m n&#xE3;o drena nenhuma corrente. &lt;br/&gt;&lt;br/&gt;Os barramentos de dados ou de clock sempre est&#xE3;o em n&#xED;vel 1 ou 0 (quando TTL 5V ou 0V e 3.3V ou 0V), por&#xE9;m quando entram no estado Z, estes al&#xE9;m de n&#xE3;o interferir no barramento, tamb&#xE9;m n&#xE3;o drenam nem monitoram o barramento deixando-o livre para a comunica&#xE7;&#xE3;o dos demais dispositivos.&lt;br/&gt;&lt;br/&gt;Muitos dispositivos ficam em modo de escuta para simular o estado Z.</description>
      <iweb:image href="Media/object012.png"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/16_Barramento_e_Portas_de_Tres_Estados.html#comment_layer"></iweb:comment>
    </item>
    <item>
      <title>Arduino - Protocolos Seriais</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/16_Reflexos_no_lago.html</link>
      <guid isPermaLink="false">b3698ab3-f149-456c-b189-85a23b6623c3</guid>
      <pubDate>Wed, 16 Apr 2014 12:25:35 -0300</pubDate>
      <description>Talvez o protocolo Serial mais conhecido no contexto do Arduino &#xE9; o Serial TTL, seguido pelo I2C, e depois o SPI. O Serial TTL &#xE9; o protocolo usado na comunica&#xE7;&#xE3;o entre o Arduino e o computador atrav&#xE9;s da porta USB, sendo usado na grava&#xE7;&#xE3;o do c&#xF3;digo e troca de dados. O Serial TTL tamb&#xE9;m &#xE9; utilizado por dispositivos como os M&#xF3;dulos GPS, xBee, BlueTooth, entre muitos outros, a grande vantagem do protocolo serial TTL &#xE9; que n&#xE3;o precisamos usar uma porta especializada para seu funcionamento, mesmo o Arduino tendo portas especificas para essa comunica&#xE7;&#xE3;o, por&#xE9;m o uso de portas gen&#xE9;ricas acarretam perda de dados, e algumas podem n&#xE3;o ser aptas totalmente ao funcionamento do protocolo.&lt;br/&gt;&lt;br/&gt;J&#xE1; o protocolo I2C (Inter Integrated Circuit) &#xE9; amplamente usado para sensores, alguns displays LCDs tamb&#xE9;m. Ele &#xE9; muito utilizado para adicionar mais mem&#xF3;ria EEPROM externas em diversos projetos. O protocolo I2C &#xE9; um protocolo que permite a comunica&#xE7;&#xE3;o com at&#xE9; 255 dispositivos al&#xE9;m do master em um &#xFA;nico barramento, e pode ser estendido por um gateway. Usa o barramento conhecido como TwoWire, j&#xE1; que  usa apenas dois fios, ambos de Tr&#xEA;s estados. Um fio &#xE9; o clock para sincronismo dos dados, e o outro &#xE9; para transmiss&#xE3;o de dados. Permitindo inclusive que haja mais de um master a cada momento de comunica&#xE7;&#xE3;o.&lt;br/&gt;&lt;br/&gt;J&#xE1; o SPI (Serial Perfiferal Inteface) &#xE9; na verdade uma interface de conex&#xE3;o utiliza por padr&#xE3;o 3 pinos, sendo dois de transmiss&#xE3;o em sentidos opostos (similar ao serial) e um terceiro para clock, o que lhe permite uma maior velocidade que o Serial TTL, podendo haver pinos de sele&#xE7;&#xE3;o dos dispositivos &#xE1; que se destina o dado, &#xE9; utilizado no Ethernet Shield que utiliza tanto para conectar o cart&#xE3;o SD como o chip Ethernet, al&#xE9;m deste uso o SPI pode ser usado para conectar um processador ao outro e tamb&#xE9;m para grava&#xE7;&#xF5;es do programa no Chip ATmega e ATtiny, sendo identificado pelo conector ICSP (In Circuit Serial Programing), j&#xE1; que permite a grava&#xE7;&#xE3;o do Controlador mesmo ele montado no circuito final.</description>
      <iweb:image href="Media/object004.jpg"></iweb:image>
      <iweb:comment enabled="0" count="0" link="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/16_Reflexos_no_lago.html#comment_layer"></iweb:comment>
    </item>
    <iweb:dateFormat>EEEE, d 'de' MMMM 'de' y</iweb:dateFormat>
    <iweb:baseURL>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos</iweb:baseURL>
    <iweb:maximumSummaryItems>5</iweb:maximumSummaryItems>
  </channel>
</rss>
