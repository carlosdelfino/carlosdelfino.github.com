<?xml version="1.0" encoding="UTF-8"?>
<rss xmlns:iweb="http://www.apple.com/iweb" version="2.0">
  <channel>
    <title>Artigos, Dicas e Tutoriais</title>
    <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Artigos.html</link>
    <description>SEmanalmente escrevo pequenas dicas e artigos para ajudar a compreender conceitos envoltos nas tecnologias que trabalho, contribuir para eliminar dúvidas.&lt;br/&gt;&lt;br/&gt;Caso tenha alguma dúvida me envie por e-mail, lembre-se de descrever seu projeto.</description>
    <generator>iWeb 3.0.4</generator>
    <image>
      <url>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Artigos_files/The_Definitive_Arduino_Uno_Pinout_Diagram_-_ARDUINO_V2.jpg</url>
      <title>Artigos, Dicas e Tutoriais</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Artigos.html</link>
    </image>
    <item>
      <title>Configurando o Asterisk para os primeiros passos</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Configurando_o_Asterisk_para_os_primeiros_passos.html</link>
      <guid isPermaLink="false">e4edb895-3726-4c02-8097-a1ad30773dfc</guid>
      <pubDate>Tue, 24 Jun 2014 22:23:38 -0300</pubDate>
      <description>&lt;a href=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Configurando_o_Asterisk_para_os_primeiros_passos_files/droppedImage.png&quot;&gt;&lt;img src=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Media/object009_1.png&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:366px; height:206px;&quot;/&gt;&lt;/a&gt;Acreditamos que você ja tenha tido sucesso em instalar o Asterisk conforme o tutorial “&lt;br/&gt;&lt;a href=&quot;http://carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Instalacao_do_Asterisk_para_uso_com_Arduino.html&quot;&gt;Instalação do Asterisk para Uso com Arduino”&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;O primeiro passo a ser dado com o Asterisk será configurar as extensões e canais de comunicação, usaremos apenas um tipo de canal,  controlado pelos protocolos SIP, o que será suficiente para tudo que desejamos apresentar e muito mais.&lt;br/&gt;&lt;br/&gt;Durante a instalação usamos o comando “make samples” para que tenhamos configurações padrões para uso do Asterisk, mas estas configurações não nos atende, portanto vamos fazer um backup delas, criando um diretório “backup” e movendo todos os arquivos que estão na pasta “/etc/asterisk” para a pasta de bakcup, porém mantenha uma copia dos seguintes arquivos:&lt;br/&gt;&lt;br/&gt;	•	asterisk.conf&lt;br/&gt;	•	indications.conf&lt;br/&gt;	•	logger.conf&lt;br/&gt;	•	cel.conf&lt;br/&gt;	•	features.conf&lt;br/&gt;&lt;br/&gt;Deixe todos os arquivos intactos, porém sugiro que liste o conteúdo de cada um para se familiarizar mais com as configurações, o arquivo asterisk.conf e logger.conf podem ter configurações de depuração alteradas para melhorar a visualização de mensagens de erros.&lt;br/&gt;&lt;br/&gt;Antes de Começar, Alguns Conceitos&lt;br/&gt;&lt;br/&gt;Para se usar o Asterisk é preciso consolidar alguns conceitos, dentre eles:&lt;br/&gt;&lt;br/&gt;	•	Canais de Audio&lt;br/&gt;	•	Ramais&lt;br/&gt;	•	Planos de Discagem&lt;br/&gt;	•	Módulos/Extensões&lt;br/&gt;&lt;br/&gt;Considerando que você já conhece tais conceitos vamos continuar.&lt;br/&gt;&lt;br/&gt;Quais Módulos iremos Usar&lt;br/&gt;&lt;br/&gt;O primeiro arquivo que vamos intervir é o arquivo “modules.conf”, este arquivo informa ao Asterisk como carregar os módulos necessário ao nosso ambiente. O Asterisk é um software totalmente modular e além de vir com todos os módulos/extensões necessários para nosso trabalho, possui uma API bem madura para se desenvolver novos módulos.&lt;br/&gt;&lt;br/&gt;Neste arquivo originalmente ele pede para que o Asterisk faça a carga automática dos módulos, porém queremos carregar apenas módulos que nos são interessantes, já que com a carga automática é carregado uma grande quantidade de módulos desnecessários. &lt;br/&gt;&lt;br/&gt;Portanto vamos criar um arquivo novo com apenas os módulos que iremos precisar em nosso Workshop.&lt;br/&gt;&lt;br/&gt;Vamos começár criando o arquivo de novo “modules.conf” e na primeira linha coloque a diretiva que indica inicio de secão “[modules]”, em seguida na próxima linha coloque o parametro “autoload”, com a opção “no”, veja abaixo o exemplo de com ficará o arquivo, neste exemplo já listo todos os módulos necessários e como devem ser carregados:&lt;br/&gt;&lt;br/&gt;Agora abaixo da diretiva autoload, coloque as diretivas conforme o exemplo a seguir, explicarei depois do exemplo os grupos de diretivas:&lt;br/&gt;&lt;br/&gt;[modules]&lt;br/&gt;autoload=no&lt;br/&gt;;&lt;br/&gt;; Modulo de Configuração por Arquivo&lt;br/&gt;preload=pbx_config.so&lt;br/&gt;;&lt;br/&gt;; Módulos de Aplicação com funções para planos de discagem&lt;br/&gt;load=app_system.so&lt;br/&gt;load=app_dial.so&lt;br/&gt;load=app_record.so&lt;br/&gt;load=app_userevent.so&lt;br/&gt;load=app_playtones.so&lt;br/&gt;load=app_playback.so&lt;br/&gt;;&lt;br/&gt;; Funções para Planos de Discagem&lt;br/&gt;load=func_dialgroup.so&lt;br/&gt;load=func_dialplan.so&lt;br/&gt;;&lt;br/&gt;; Recursos&lt;br/&gt;load=res_rtp_asterisk.so&lt;br/&gt;; Recurso que ira fazer a integracão com scripts que se comunicam com Arduino&lt;br/&gt;load=res_agi.so&lt;br/&gt;;&lt;br/&gt;; Codecs de Audio&lt;br/&gt;load=codec_alaw.so&lt;br/&gt;load=codec_ulaw.so&lt;br/&gt;load=codec_gsm.so&lt;br/&gt;load=codec_ilbc.so&lt;br/&gt;;&lt;br/&gt;; Canais de Audio Local&lt;br/&gt;noload=chan_alsa.so&lt;br/&gt;noload=chan_oss.so&lt;br/&gt;noload=chan_console.so&lt;br/&gt;; Canais de Audio VOIP, usaremos apenas SIP para os ramais&lt;br/&gt;load=chan_sip.so&lt;br/&gt;;&lt;br/&gt;; Formatos de audio, observe diretiva “noload”, diz para não carregar&lt;br/&gt;noload=format_g719.so&lt;br/&gt;load=format_ilbc.so&lt;br/&gt;noload=format_sln16.so&lt;br/&gt;load=format_g723.so&lt;br/&gt;load=format_jpeg.so&lt;br/&gt;noload=format_sln.so&lt;br/&gt;noload=format_g726.so&lt;br/&gt;load=format_mp3.so&lt;br/&gt;load=format_vox.so&lt;br/&gt;load=format_g729.so&lt;br/&gt;load=format_ogg_vorbis.so&lt;br/&gt;load=format_wav_gsm.so&lt;br/&gt;load=format_gsm.so&lt;br/&gt;load=format_pcm.so&lt;br/&gt;load=format_wav.so&lt;br/&gt;noload=format_h263.so&lt;br/&gt;noload=format_siren14.so&lt;br/&gt;noload=format_h264.so&lt;br/&gt;noload=format_siren7.so&lt;br/&gt;&lt;br/&gt;Como pode ser visto nos comentários, carregamos primeiro um modulo que irá cuidar da configuração, este modulo nos oferece recurso como recargar de configuração, e principalmente a possibilidade de se usar arquivos de configuração em formato texto.&lt;br/&gt;&lt;br/&gt;O módulo de configuração e carregado com a diretiva “preload” para que seja carregado com antecedência.&lt;br/&gt;&lt;br/&gt;Em seguida, carregamos módulos de aplicação e úteis ao plano de discagem, porém o que mais nos interessa e que iremos lidar mais, além do plano de discagem propriamente dito, será o módulo “res_agi.so”, este módulo é responsável pela integração com aplicações externas, funcionando como um Gateway para o Asterisk e tais aplicações, será através deste recurso que iremos ver como desenvolver scripts para se comunicar com o Arduino.&lt;br/&gt;&lt;br/&gt;Os módulos de prefixo “chan_”, criam os canais de audio e voip necessário ao funcionamento do Asterisk e todo o PBX e os módulos de prefixo “format_” carregam recursos para tratamentos dos arquivos de áudio nos formatos identificados, serão úteis para gravar e reproduzir arquivos de áudio.&lt;br/&gt;&lt;br/&gt;Após esta mudança precisamos reiniciar o Asterisk já que fizemos mudaças em praticamente todos os arquivos de configuração, reiniciando é mais seguro se ter o resultado desejado.&lt;br/&gt;&lt;br/&gt;Porém, ao se alterar apenas arquivos de configurações pode se usar o comando “rasterisk” que veremos a seguir.&lt;br/&gt;&lt;br/&gt;Próximos Passos&lt;br/&gt;&lt;br/&gt;Veremos no próximo tutorial como criar nosso primeiro canal de comunicação e nossos ramais. Aguardem.</description>
      <enclosure url="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Configurando_o_Asterisk_para_os_primeiros_passos_files/droppedImage.png" length="54106" type="image/png"/>
    </item>
    <item>
      <title>Instalação do Asterisk para uso com Arduino</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Instalacao_do_Asterisk_para_uso_com_Arduino.html</link>
      <guid isPermaLink="false">278b05a4-31b8-44f7-a877-03a976422694</guid>
      <pubDate>Tue, 24 Jun 2014 19:49:57 -0300</pubDate>
      <description>&lt;a href=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Instalacao_do_Asterisk_para_uso_com_Arduino_files/droppedImage.png&quot;&gt;&lt;img src=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Media/object000_1.png&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:370px; height:208px;&quot;/&gt;&lt;/a&gt;Antes de começarmos é importante lembrar que Asterisk foi desenvolvido para o SO Linux, porém há ports para outros SOs como FreeBSD, MACOSX e até para Windows, mas o mais interessante e o fato de haver ports para que possa ser usado com RaspberryPI e até para Beagle Bone.&lt;br/&gt;&lt;br/&gt;Para instalar o Asterisk é preciso seguir alguns passos, dentre eles você deve primeiro fazer o Download dos seguintes pacotes, para isso crie uma pasta por exemplo chamada “/usr/src/asterisk”, ou outro local que achar mais indicado em sua instalação Linux. (sim iremos nos basear no Linux, já que o Asterisk roda bem melhor nesta SO), observe neste tutorial estarei usando o Ubuntu em sua última versão.&lt;br/&gt;&lt;br/&gt;Use os seguintes comandos para baixar os pacotes:&lt;br/&gt;&lt;br/&gt;wget &lt;a href=&quot;http://downloads/asterisk.org/pub/telephony/asterisk/asterisk-1.8.current.tar.gz&quot;&gt;http://downloads/asterisk.org/pub/telephony/asterisk/asterisk-1.8.current.tar.gz&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;wget &lt;a href=&quot;http://downloads/asterisk.org/pub/telephony/libpri/libpri-1.4.current.tar.gz&quot;&gt;http://downloads/asterisk.org/pub/telephony/libpri/libpri-1.4.current.tar.gz&lt;/a&gt;&lt;br/&gt;wget &lt;a href=&quot;http://downloads/asterisk.org/pub/telephony/libss7/libss7-1.0.2.tar.gz&quot;&gt;http://downloads/asterisk.org/pub/telephony/libss7/libss7-1.0.2.tar.gz&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;wget &lt;a href=&quot;http://downloads/asterisk.org/pub/telephony/dahdi-linux/dahdi-tools/dahdi-tools-current.tar.gz&quot;&gt;http://downloads/asterisk.org/pub/telephony/dahdi-linux/dahdi-tools/dahdi-tools-current.tar.gz&lt;/a&gt;&lt;br/&gt;wget &lt;a href=&quot;http://downloads/asterisk.org/pub/telephony/dahdi-linux/dahdi-linux/dahdi-linux-current.tar.gz&quot;&gt;http://downloads/asterisk.org/pub/telephony/dahdi-linux/dahdi-linux/dahdi-linux-current.tar.gz&lt;/a&gt;&lt;br/&gt;wget &lt;a href=&quot;http://openr2.googlecode.com/files/openr2-1.3.1.tar.gz&quot;&gt;http://openr2.googlecode.com/files/openr2-1.3.3.tar.gz&lt;/a&gt;&lt;br/&gt;&lt;br/&gt;Agora que baixou os pacotes descompacte cada um e certifique-se que as pastas foram criadas conforme o nome de cada arquivo.&lt;br/&gt;&lt;br/&gt;Compilando os pacotes e instalando&lt;br/&gt;&lt;br/&gt;Vamos começar a instalação pelo pacote dahdi-linux-current.tar.gz, portanto entre no diretorio que foi criado ao descompactar este pacote e digite os seguintes comandos em cada linha:&lt;br/&gt;&lt;br/&gt;make clean&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;O próximo pacote deve ser o dahdi-tools-current.tar.gz, siga o mesmo procedimento mudando para o diretório criado com a descompactação e em seguida digite os comandos no diretório&lt;br/&gt;&lt;br/&gt;make clean&lt;br/&gt;./configure&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;Continuarmos o mesmo procedimento agora no pacote libpri-1.4.current.tar.gz, digitando os seguintes comandos em cada linha:&lt;br/&gt;&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;Agora compilamos o pacote openr2-1.3.1-tar.gz, descompacte como os anteriores entre no diretório criado e digite os comandos em cada linha, este pacote não será necessário em nosso workshop, já que seu uso é para quem pretende ter linha E1 em seu ambiente:&lt;br/&gt;&lt;br/&gt;./configure --prefix=/usr&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;O pacote libss7-1.0.2.tar.gz para terminar os prequistos manuais, seguindo também os mesmo procedimentos:&lt;br/&gt;&lt;br/&gt;make clean&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;&lt;br/&gt;E finalmente o próprio Asterisk que não tem segredos na instalação sendo necessário os seguintes comandos, obseve que ao digitar o comando “make menuselect” você pode sair dele sem mudar nenhuma seleção, porém se quiser arriscar (experimentando) ou sabe exatamente o que faz, pode mudar as seleções para atender suas necessidades:&lt;br/&gt;&lt;br/&gt;contrib/scripts/get_ilbc_source.sh&lt;br/&gt;contrib/scripts/get_mp3_source.sh&lt;br/&gt;contrib/scripts/install_prereq&lt;br/&gt;make menuselect&lt;br/&gt;make&lt;br/&gt;make install&lt;br/&gt;make samples&lt;br/&gt;make config&lt;br/&gt;&lt;br/&gt;Pronto em tese o Asterisk está pronto e instalado para iniciar nosso workshop.&lt;br/&gt;&lt;br/&gt;Em breve mais atualizações neste tutorial e mais links para outros tutoriais que usaremos no Workshop.&lt;br/&gt;&lt;br/&gt;Outras informações sobre o Workshop podem ser obtidos no link: &lt;a href=&quot;https://www.facebook.com/events/1500419536839268/?ref=ts&amp;fref=ts&quot;&gt;https://www.facebook.com/events/1500419536839268/&lt;/a&gt;</description>
      <enclosure url="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/6/24_Instalacao_do_Asterisk_para_uso_com_Arduino_files/droppedImage.png" length="54106" type="image/png"/>
    </item>
    <item>
      <title>433Mhz - porque usar?</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/5/9_433Mhz_-_porque_usar.html</link>
      <guid isPermaLink="false">e8d12edf-9c84-405d-af3e-27bf85e13c2d</guid>
      <pubDate>Fri, 9 May 2014 12:06:10 -0300</pubDate>
      <description>&lt;a href=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/5/9_433Mhz_-_porque_usar_files/droppedImage.png&quot;&gt;&lt;img src=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Media/object019_2.png&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:375px; height:231px;&quot;/&gt;&lt;/a&gt; </description>
      <enclosure url="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/5/9_433Mhz_-_porque_usar_files/droppedImage.png" length="114841" type="image/png"/>
    </item>
    <item>
      <title>Barramento OneWire - 1-wire</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/29_Barramento_OneWire_-_1-wire.html</link>
      <guid isPermaLink="false">9eef616c-054a-4d06-b7ac-abf9d83ee26c</guid>
      <pubDate>Tue, 29 Apr 2014 00:16:18 -0300</pubDate>
      <description>&lt;a href=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/29_Barramento_OneWire_-_1-wire_files/droppedImage.png&quot;&gt;&lt;img src=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Media/object019_3.png&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:375px; height:231px;&quot;/&gt;&lt;/a&gt;Muitas vezes usamos alguns sensores que utilizam um único barramento para se comunicar com o Arduino, alguns precisam de alimentação como é o caso do DHT-11/22, outros não, como o sensor de temperatura DS18B20. Porém, o DHT-11/22 usa um barramento chamado Single-Wire Two Way, que é diferente do Barramento OneWire que também se escrito 1-Wire, desenvolvido pela Dallas Semiconductor Inc. atual Maxim.&lt;br/&gt;&lt;br/&gt;O Grande diferencial do 1-Wire além de ser bidirecional, é o fato de usar o barramento de comunicação como fonte de alimentação, portanto os dispositivos são construídos para obter energia do próprio barramento de dados, o que chamamos de alimentação parasita. Um barramento 1-Wire, aceita múltiplos Slaves não importa a família, podendo comunicar a uma taxa de 15,3Kbs, havendo alguns que se comunicam em velocidade superiores. Devido a baixa velocidade e o baixo consumo é possível usar barramentos com amplo comprimento, como 10M. O Barramento 1-Wire é também conhecido como MicroLan. Há possibilidade de simular 1-Wire na porta serial ou Paralela de um PC.&lt;br/&gt;&lt;br/&gt;Há dispositivos 1-Wire encapsulados como transistores (T-92), e como botões similares a bateria de relógio conhecidos como iButton. Entre os principais dispositivos temos Sensores de Temperatures,  Identificadores e Memória EEPROM. Todos tendo uma identificação única 8 bytes de fábrica.</description>
      <enclosure url="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/29_Barramento_OneWire_-_1-wire_files/droppedImage.png" length="114841" type="image/png"/>
    </item>
    <item>
      <title>Canais Arena Mundial</title>
      <link>http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/23_Canais_Arena_Mundial.html</link>
      <guid isPermaLink="false">f264594f-48bc-40c1-bc24-3ff7e2acde24</guid>
      <pubDate>Wed, 23 Apr 2014 16:14:42 -0300</pubDate>
      <description>&lt;a href=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/23_Canais_Arena_Mundial_files/droppedImage.jpg&quot;&gt;&lt;img src=&quot;http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Media/object000_1.jpg&quot; style=&quot;float:left; padding-right:10px; padding-bottom:10px; width:307px; height:257px;&quot;/&gt;&lt;/a&gt; </description>
      <enclosure url="http://www.carlosdelfino.eti.br/Carlos_Delfino_-_Consultoria_e_Projetos/Artigos/Entradas/2014/4/23_Canais_Arena_Mundial_files/droppedImage.jpg" length="111610" type="image/jpeg"/>
    </item>
  </channel>
</rss>
